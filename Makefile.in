# Makefile.

SHELL = '/bin/sh'

MESOS_HOME = @prefix@/mesos

WITH_INCLUDED_ZOOKEEPER = @WITH_INCLUDED_ZOOKEEPER@

LIBPROCESS = third_party/libprocess

ZOOKEEPER = third_party/zookeeper-3.3.1/src/c

GLOG = third_party/glog-0.3.1
GTEST = third_party/gtest-1.5.0


default: all

src: third_party
	$(MAKE) -C src

third_party:
	$(MAKE) -C $(LIBPROCESS)
	$(MAKE) -C $(GLOG)
	$(MAKE) -C $(GTEST)
ifeq ($(WITH_INCLUDED_ZOOKEEPER),1)
	$(MAKE) -C $(ZOOKEEPER)
endif

install:
	if test ! -d $(MESOS_HOME)/bin; \
		then mkdir -p $(MESOS_HOME)/bin; \
	fi
	if test ! -d $(MESOS_HOME)/bin; \
		then mkdir -p $(MESOS_HOME)/bin; \
	fi
	install -m 755 $(BINDIR)/mesos-master $(MESOS_HOME)/bin
	install -m 755 $(BINDIR)/mesos-slave $(MESOS_HOME)/bin
	install -m 755 $(LIBDIR)/java/libmesos.so $(MESOS_HOME)/lib/java
	rsync -avz src/webui $(MESOS_HOME)
	if test ! -d $(MESOS_HOME)/third_party; \
		then mkdir $(MESOS_HOME)/third_party; \
	fi
	rsync -avz @srcdir@/third_party/bottle-0.5.6 $(MESOS_HOME)/third_party

uninstall:
	$(error unimplemented)

dist:
	$(error unimplemented)

distclean:
	$(MAKE) -C src clean
	$(MAKE) -C $(LIBPROCESS) distclean
	$(MAKE) -C $(GLOG) distclean
	$(MAKE) -C $(GTEST) distclean
ifeq ($(WITH_INCLUDED_ZOOKEEPER),1)
	$(MAKE) -C $(ZOOKEEPER) distclean
endif

doxygen:
	doxygen

etags:
	find src -name "*.cpp" -o -name "*.hpp" | grep -v "\~$$" | xargs etags -o src/TAGS

CTAGS = ctags
ctags:
	cd src; $(CTAGS) ../include/*.h ../include/*.hpp *.h *.c *.hpp *.cpp

#TODO(*): make the above use conditionals to handle old-school UNIX style ctags too.
#cd src; ctags --typedefs-and-c++ -I -members --declarations ../include/*.h ../include/*.c ../include/*.hpp ../include/*.cpp -o tags

test: all
	$(MAKE) -C src test

all: src

clean:
	$(MAKE) -C src clean
	$(MAKE) -C $(LIBPROCESS) clean
	$(MAKE) -C $(GLOG) clean
	$(MAKE) -C $(GTEST) clean
ifeq ($(WITH_INCLUDED_ZOOKEEPER),1)
	$(MAKE) -C $(ZOOKEEPER) clean
endif

.PHONY: default src third_party install uninstall dist test all clean
