#!/bin/bash
OS_NAME=$1
DOWNLOAD_METHOD=$2
BRANCH=$3

# Set PATH to include Scala
export PATH=$PATH:/root/scala-2.7.7.final/bin

MASTER=/root/nexus-ec2/master
SLAVES=/root/nexus-ec2/slaves

# Scripts that get used for/while running Nexus.
SCRIPTS="copy-dir
         nexus-daemon
         redeploy-nexus
         setup-apache
         setup-slave              
         ssh-no-keychecking
         start-mos
         start-nexus
         stop-mos
         stop-nexus
         stop-tasktracker-child"

HADOOP_HOME=/root/hadoop-0.20.2

JAVA_HOME=/usr/lib/jvm/java-6-sun

SSH_OPTS="-o StrictHostKeyChecking=no -o ConnectTimeout=2"

if [[ `tty` == "not a tty" ]] ; then
    echo "Expecting a tty or pty! (use the ssh -t option)."
    exit 1
fi

echo "Setting up Nexus master on `hostname`..."

cd /root/nexus-ec2

echo "Setting executable permissions on scripts..."
for s in $SCRIPTS; do chmod u+x $s; done

echo "SSH'ing to local machine to approve key..."
ssh -q $SSH_OPTS `cat $MASTER` echo -n
ssh -q $SSH_OPTS localhost echo -n

echo "SSH'ing to slaves to approve keys..."
for slave in `cat $SLAVES`; do
  echo $slave
  ssh $SSH_OPTS $slave echo -n &
  sleep 0.3
done
echo "Waiting for commands to finish..."
wait

echo "RSYNC'ing /root/nexus-ec2 to slaves..."
for slave in `cat $SLAVES`; do
  echo $slave
  rsync -e "ssh $SSH_OPTS" -az /root/nexus-ec2 $slave:/root
done

echo "Setting up slaves..."
for slave in `cat $SLAVES`; do
  echo $slave
  ssh -t $SSH_OPTS root@$slave "nexus-ec2/setup-slave"
done

echo "Setting up master as slave (i.e. for local)..."
./setup-slave

echo "RSYNC'ing Hadoop config files to slaves..."
for slave in `cat $SLAVES`; do
  echo $slave
  rsync -e "ssh $SSH_OPTS" -az $HADOOP_HOME/conf $slave:$HADOOP_HOME
done

DOWNLOADED=0

if [[ "$DOWNLOAD_METHOD" == "git" ]] ; then
  REPOSITORY=git@github.com:nexusproject/nexus.git
  echo "Checking out Nexus from $REPOSITORY"
  pushd /root > /dev/null 2>&1
  rm -rf nexus nexus.tgz
  # Set git SSH command to a script that uses -o StrictHostKeyChecking=no
  GIT_SSH=/root/nexus-ec2/ssh-no-keychecking git clone $REPOSITORY nexus
  GIT_SSH=/root/nexus-ec2/ssh-no-keychecking git checkout $BRANCH
  popd > /dev/null 2>&1
  DOWNLOADED=1
elif [[ "$DOWNLOAD_METHOD" == "web" ]] ; then
  echo "Downloading latest Nexus snapshot from nexus.berkeley.edu"
  pushd /root > /dev/null 2>&1
  rm -rf nexus nexus.tgz
  wget http://nexus:nexus@nexus.berkeley.edu/releases/nexus.tgz
  tar xzf nexus.tgz
  popd > /dev/null 2>&1
  DOWNLOADED=1
fi


# Build Nexus if we downloaded it
if [[ "$DOWNLOADED" == "1" ]] ; then
  echo "Building Nexus..."
  pushd /root/nexus > /dev/null 2>&1
  ./configure.OURS.$OS_NAME
  make clean
  make
  popd > /dev/null 2>&1
  if [ -d /root/nexus/frameworks/spark ] ; then
    echo "Building Spark..."
    pushd /root/nexus/frameworks/spark > /dev/null 2>&1
    make all native
    popd > /dev/null 2>&1
  fi
  echo "Building Hadoop framework..."
  pushd /root/nexus/frameworks/hadoop-0.20.0 > /dev/null 2>&1
  ant
  ant examples
  popd > /dev/null 2>&1
fi

echo "Setting up Hadoop framework config files..."
cp hadoop-framework-conf/* /root/nexus/frameworks/hadoop-0.20.0/conf

echo "Setting up haproxy+apache framework config files..."
cp haproxy+apache/* /root/nexus/frameworks/haproxy+apache

echo "Setting up Spark config files..."
mkdir -p /root/nexus/frameworks/spark/conf
echo "-Dspark.dfs=hdfs://$HOSTNAME:9000 -Djava.io.tmpdir=/nfs" \
     > /root/nexus/frameworks/spark/conf/java-opts

echo "Redeploying /root/nexus..."
./redeploy-nexus

echo "Setting up NFS..."
if [ ! -e /mnt/nfs ] ; then
  mkdir -p /mnt/nfs
  rm -fr /nfs
  ln -s /mnt/nfs /nfs
  echo "/nfs    10.0.0.0/8(ro,async,no_subtree_check)" >> /etc/exports
  exportfs -a
fi
echo "Mounting NFS on slaves..."
for slave in `cat $SLAVES`; do
  echo $slave
  ssh -t $SSH_OPTS root@$slave "mkdir -p /nfs; mount $HOSTNAME:/nfs /nfs"
done

echo "Formatting HDFS namenode..."
$HADOOP_HOME/bin/hadoop namenode -format

echo "Starting HDFS..."
$HADOOP_HOME/bin/start-dfs.sh

echo "Starting MapOutputServer(s)..."
./start-mos

echo "Starting Nexus cluster..."
./start-nexus
